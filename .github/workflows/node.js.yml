name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb?schema=public
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install deps
        run: yarn --frozen-lockfile install

      - name: Wait for Postgres
        run: |
          for i in $(seq 1 30); do
            pg_isready -h localhost -p 5432 -U postgres && break
            echo "Waiting for Postgres..."
            sleep 1
          done

      - name: Prisma generate
        run: npx prisma generate

      - name: Run migrations
        run: npx prisma migrate deploy

      - name: Build
        run: yarn build

      - name: Start app in background & wait for GraphQL
        run: |
          yarn start:prod &
          npx wait-on http://localhost:3000/graphql

      - name: Run e2e
        run: yarn test:e2e
