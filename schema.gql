# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TagResponse {
  id: String!
  title: String!
  description: String
  taskId: Float
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TaskResponse {
  id: ID!
  title: String!
  description: String
  dueAt: DateTime
  status: String
  tags: [TagResponse]
}

type TaskPagination {
  totalTask: Int!
  totalPage: Int!
  items: [TaskResponse!]
}

type ReturnResult {
  message: String!
  data: TaskResponse
}

type UserResponse {
  id: Int!
  email: String!
  firstName: String
  lastName: String
  role: String
}

type AuthResponse {
  success: Boolean!
  message: String
  token: String
  user: UserResponse
}

type ReportResponse {
  totalTask: Float!
  totalInProgress: Float!
  totalTag: Float!
}

type UserPagination {
  totalTask: Int
  totalPage: Int
  items: [UserResponse!]
}

type Query {
  tasks(userId: Float!, currentPage: Float!): TaskPagination!
  tags: [TagResponse!]!
  report: ReportResponse!
  users(currentPage: Float!): UserPagination!
  userId(userId: Float!): UserResponse!
}

type Mutation {
  addTask(userId: Float!, data: CreateTaskInput!): ReturnResult!
  editTask(id: Float!, data: CreateTaskInput!): ReturnResult!
  deleteTask(id: Float!): ReturnResult!
  search(userId: Float!, title: String!): TaskPagination!
  signIn(data: LoginUserInput!): AuthResponse!
  signUp(data: CreateUserInput!): AuthResponse!
  googleLogin(idToken: String!): AuthResponse!
  logout: Boolean!
  addTag(data: CreateTagInput!): TagResponse!
  editTag(id: Float!, data: CreateTagInput!): TagResponse!
  deleteTag(id: Float!): TagResponse!
  deleteUser(userId: Float!): ReturnResult!
}

input CreateTaskInput {
  title: String!
  dueAt: DateTime!
  description: String
  status: TaskStatus
  tags: [String]
}

"""Status cá»§a Task"""
enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  firstName: String
  lastName: String
}

input CreateTagInput {
  title: String!
  description: String
}